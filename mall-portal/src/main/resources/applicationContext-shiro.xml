<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
        <!--配置realm-->
        <bean id="usernamePasswordCaptchaRealm" class="com.mall.security.realm.UsernamePasswordCaptchaRealm">
            <property name="credentialsMatcher">
                <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                    <!--配置加密方式-->
                    <property name="hashAlgorithmName" value="SHA-256"/>
                    <!--散列迭代次数-->
                    <property name="hashIterations" value="${encryption.hashIterations}"/>
                    <!--表示是否存储散列后的密码为16进制，需要和生成密码时的一样，默认是base64-->
                    <!--此处最需要注意的就是HashedCredentialsMatcher的算法需要和生成密码时的算法一样。
                    另外HashedCredentialsMatcher会自动根据AuthenticationInfo的类型是否是SaltedAuthenticationInfo来获取credentialsSalt盐-->
                    <property name="storedCredentialsHexEncoded" value="true"/>
                </bean>
            </property>
        </bean>
        <!--shiro自定义拦截表单验证-->
        <!--<bean id="loginAuthenticationFilter" class="com.mall.security.filter.LoginAuthenticationFilter"/>-->
        <!--安全管理器-->
        <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
            <!--将自定义realm注入到securityManager-->
            <property name="realm" ref="usernamePasswordCaptchaRealm"/>
        </bean>
        <!--shiro拦截器-->
        <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
            <!--注入安全管理器-->
            <property name="securityManager" ref="securityManager"/>
            <!--登录链接-->
            <property name="loginUrl" value="/login.jspx"/>
            <!--成功登录链接-->
            <property name="successUrl" value="/index.html"/>
            <!--未授权页面-->
            <property name="unauthorizedUrl" value="/login2.html"/>
            <!--过滤链定义-->
            <property name="filterChainDefinitions">
                <value>
                    /css/** = anon
                    /js/** = anon
                    /images/** = anon
                    /captcha.jspx = anon
                    /smsCode.jspx = anon
                    /login.jspx = anon
                    /logout.jspx = authc
                    /register.jspx = anon
                    /** = authc
                </value>
            </property>
        </bean>
</beans>